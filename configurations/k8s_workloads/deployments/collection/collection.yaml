apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: collection
  name: collection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collection
  template:
    metadata:
      labels:
        app: collection
    spec:
      containers:
        - args:
            - "-c"
            - "nc -lnvp 8080"
          command:
            - "/bin/sh"
          image: docker.io/library/alpine@sha256:e1c082e3d3c45cccac829840a25941e679c25d438cc8412c2fa221cf1a824e6a
          imagePullPolicy: IfNotPresent
          name: alpine-container
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
        - args:
            - "wget https://kubernetes.io/; sleep 30; wget https://cloud.armosec.io/; sleep 30; wget https://console.cloud.google.com/; sleep 30; redis-server"
          command:
            - "/bin/sh"
            - "-c"
          image: docker.io/library/redis@sha256:92f3e116c1e719acf78004dd62992c3ad56f68f810c93a8db3fe2351bb9722c2
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data
              name: redis-data
        - env:
            - name: WORDPRESS_DB_HOST
              value: XXXXXX
            - name: WORDPRESS_DB_NAME
              value: XXXXXX
            - name: WORDPRESS_DB_USER
              value: XXXXXX
            - name: WORDPRESS_DB_PASSWORD
              value: XXXXXX
            - name: WORDPRESS_DEBUG
              value: XXXXXX
          image: docker.io/library/wordpress@sha256:5f1873a461105cb1dc1a75731671125f1fb406b18e3fcf63210e8f7f84ce560b
          imagePullPolicy: IfNotPresent
          name: wordpress
          ports:
            - containerPort: 80
              name: wordpress
              protocol: TCP
          resources: {}
          securityContext:
            readOnlyRootFilesystem: false
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - "-c"
            - 'echo "Initialization complete."'
          image: docker.io/library/busybox@sha256:e8e5cca392e3cf056fcdb3093e7ac2bf83fcf28b3bcf5818fe8ae71cf360c231
          imagePullPolicy: IfNotPresent
          name: busybox
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
        - command:
            - "/bin/sh"
            - "-c"
            - 'echo "Performing initialization tasks..."\napk add --no-cache curl\n# Add more initialization tasks as needed\n'
          image: docker.io/library/alpine@sha256:e1c082e3d3c45cccac829840a25941e679c25d438cc8412c2fa221cf1a824e6a
          imagePullPolicy: IfNotPresent
          name: alpine
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
      restartPolicy: Always
      volumes:
        - emptyDir: {}
          name: redis-data
        - configMap:
            defaultMode: 420
            name: alpine-configmap
          name: config-volume
